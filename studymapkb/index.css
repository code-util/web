:root {
    --bg: #ebeef5;
    --light: #fcfcfc;
    --dark: #cad3df;
    --darker: #afb3c9;
    --darkest: #715c83;
    --even-dark: #57406B;
    --success: #bee7b2;
    --error: #382448;
    --error2: #dea8f2;
}

* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
    -webkit-tap-highlight-color: transparent;
    font-family: "Open Sans", serif;
    font-optical-sizing: auto;
    user-select: none;
}
*:focus {
    outline: none;
}

.content {
    transition: .3s;
}

html {
    height: 100vh;
}

body {
    background-color: var(--bg);
    height: 100%;
    width: 100%;
}

.buildingHover {
    fill: var(--dark) !important;
    cursor: pointer;
    transition: .3s;
}
.buildingHover:hover {
    fill: var(--darker) !important
}
.activeBuilding {
    fill: var(--darkest) !important;
}



.hidden {
    opacity: 0;
    display: none !important;
}

.root {
    display: flex;
    height: 100%;
    width: 100%;
    flex-direction: column;
    position: relative;
    overflow: hidden;
}

.overlays {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    pointer-events: none;
    z-index: 99;
}

.offline {
    position: absolute;
    bottom: 24px;
    padding: 4px 64px;
    background-color: var(--error);
    color: var(--bg);
    transform: translateX(-50%);
    left: 50%;
    padding: 8px 16px;
    display: flex;
    flex-direction: row;
    transition: .3s;
    justify-content: center;
    align-items: center;
    gap: 16px;
    z-index: 70;
}
.offline p {
    white-space: nowrap;
}
.offline svg {
    width: 28px;
    height: 28px;
}
.offline path {
    stroke: var(--bg) !important;
}

.internetNeeded {
    display: grid;
    justify-content: center;
    align-items: center;
}
.internetNeeded .container {
    display: grid;
    justify-content: center;
    align-items: center;
}
.internetNeeded .container p {
    margin-top: 12px ;
}
.internetNeeded .container svg {
    margin: 0 auto;
    width: 32px;
    height: 32px;
}

.overlay {
    width: 100%;
    height: 100%;
    background-color: var(--bg);
}

.languageList {
    display: grid;
    justify-content: center;
    align-items: center;
    pointer-events: all;
}
.languageList .list {
    text-align: center;
    max-height: 400px;
    max-width: 200px;
    width: 100%;
    overflow-y: auto;
}
.list p {
    margin-top: 8px;
    background-color: var(--dark);
    width: 100%;
    padding: 8px 16px;
    cursor: pointer;
}
.list .active {
    background-color: var(--darkest);
    color: var(--bg);
}

.loader {
    display: grid;
    justify-content: center;
    align-items: center;
}

.spinLoader {
  border: 2px solid var(--dark); /* Light gray */
  border-top: 2px solid var(--error); /* Blue */
  border-radius: 50%;
  width: 50px;
  height: 50px;
  animation: spin 1.5s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}

.topButtons {
    position: absolute;
}

.mapContainer {
    height: 100%;
    width: 100%;
    overflow: hidden;
    display: grid;
    justify-content: center;
    align-items: center;
    position: relative;
}
.mapOverlay {
    position: absolute;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    backdrop-filter: blur(4px);
    cursor: pointer;
    z-index: 8;
}
.content {
    background-color: var(--darkest);
    color: var(--bg);
}

.buttonStack {
    position: absolute;
    right: 24px;
    bottom: 24px;
    display: flex;
    flex-direction: column;
    z-index: 8;
}

.button {
    padding: 8px;
    background-color: var(--darkest);
    display: grid;
    justify-content: center;
    align-items: center;
    margin-top: 8px;
    cursor: pointer;
    transition: .3s;
}
.button:hover, a:hover {
    opacity: .85 !important;
}
.button:focus, a:focus{
    opacity: .75 !important;
}
.button svg {
    width: 28px;
    height: 28px;
    color: var(--bg) !important;
}
.button path {
    stroke: var(--bg) !important
}

.topButtons {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    z-index: 10;
}
.topButtons .button {
    margin: 0;
}
.topButtons .translate {
    position: absolute;
    right: 24px;
    top: 24px;
    display: flex;
    padding: 8px 16px;
}
.topButtons .translate p {
    color: var(--bg);
    margin-right: 8px;
}
.topButtons .close {
    position: absolute;
    left: 24px;
    top: 24px;
}

.header {
    padding: 32px;
    max-width: 800px;
    width: 100%;
    margin-left: auto;
    margin-right: auto;
}

.header h1 {
    font-size: 32px;
    font-weight: 600;
}
.header p {
    font-size: 16px;
    margin-top: .3rem;
}

.moreInfoWrapper {
    background-color: var(--light);
    padding: 32px 0;
    height: 50vh;
}
.moreInfo {
    padding: 0 32px;
    height: 100%;
    max-width: 800px;
    width: 100%;
    margin-left: auto;
    margin-right: auto;
    overflow-y: auto;
}
.moreInfo p {
    color: var(--darkest);
}
.accordian {
    margin-top: 32px;
}
.card {
    border-bottom: thin solid var(--even-dark);
}
.card:last-child {
    border-bottom: none;
}
.card .main {
    background-color: var(--darkest);
    color: var(--bg);
    display: grid;
    grid-template-columns: auto 24px;
    padding: 16px 32px;
    cursor: pointer;
}
.card .main p {
    font-weight: 600;
}
.icon {
    display: grid;
    justify-content: center;
    align-items: center;
}
.active .icon {
    transform: rotate(90deg);
}
.icon svg {
    width: 24px;
    height: 24px;
}
.card .main p, .card .main svg path {
    color: var(--bg);
    stroke: var(--bg);
}
.card .body {
    background-color: var(--bg);
    color: var(--even-dark);
    padding: 32px;
}
.tags {
    margin-top: 32px;
    display: flex;
    gap: 10px;
    flex-wrap: wrap;
}
.body .tags .tag {
    background-color: #d8dde7;
    border: thin solid var(--darker);
    color: var(--darkest);
    padding: 4px 12px;
    white-space: nowrap;
}
.body p {
    margin-top: 8px;
}
.body p:first-of-type {
    margin-top: 0;
}
.header .tags .tag {
    background-color: var(--even-dark);
    color: var(--bg);
    padding: 12px;
    white-space: nowrap;
}
.tags .tag {
    font-weight: 600;
}

.moreInfo .suggest {
    margin-top: 32px;
    color: var(--darkest);
}
.suggest a {
    color: var(--darkest);
    font-weight: 600;
}